stages:
  - build
  - remote-copy
  - deploy_dev

default:
  image: node:18-alpine3.15

variables:
  REPOSITORY: "$CI_PROJECT_DIR/.m2"
  REPO_URL: 020415689197.dkr.ecr.us-east-1.amazonaws.com
  SERVICE_NAME: booking
  MICROSOFT_CLIENT: 'PAISA CLIENT'

build:
  stage: build
  script: "npm install && npm run build::prod"
  artifacts:
    when: on_success
    expire_in: 23h
    untracked: true
    paths:
      - dist

containerize:
  stage: remote-copy
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - /busybox/mkdir -p ~/.aws
    - echo "[default]" > ~/.aws/credentials
    - echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
    - echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials
    - /busybox/echo "{\"credHelpers\":{\"$REPO_URL\":\"ecr-login\"}}" > /kaniko/.docker/config.json
    - echo "[default]" > $CI_PROJECT_DIR/dist/credentials
    - echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> $CI_PROJECT_DIR/dist/credentials
    - echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> $CI_PROJECT_DIR/dist/credentials
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $REPO_URL/kru360/$SERVICE_NAME:$CI_COMMIT_TAG
    - ls $CI_PROJECT_DIR
  when: on_success
  only:
    - main

.deploy:
  stage: deploy
  image:
    name: alpine
    entrypoint: [""]
  dependencies:
    - containerize
  script:
    - apk add --no-cache curl python3 py3-pip && pip3 install --upgrade pip && pip3 install awscli && rm -rf /var/cache/apk/*
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x kubectl
    - install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
    - aws eks update-kubeconfig --region us-east-1 --name dev-kru-cluster
    - SHA=$(aws ecr describe-images --region us-east-1 --repository-name kru360/booking --image-ids imageTag=latest | grep -E '(sha256:[a-z,0-9]*)' -o)
    # - kubectl set image deployment/kru360-cc kru360-cc-container=070674207408.dkr.ecr.us-east-1.amazonaws.com/kru360/$SERVICE_NAME:latest
    - kubectl set image deployment/kru360-booking booking-container=$REPO_URL/kru360/$SERVICE_NAME@$SHA

deploy_dev:
  stage: deploy_dev
  extends: .deploy
  environment:
      name: dev
  variables:
    NAMESPACE: base
    KUBECONFIG64: $DEV_KUBECONFIG64
#    DOCKER_TAG: ${CI_COMMIT_SHORT_SHA}_dev
    DOCKER_TAG: latest
  only:
    - main

